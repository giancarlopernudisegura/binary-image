#!/usr/bin/env python
import sys
from PIL import Image
from helper_methods import *


def help_prompt():
    command='./bpi'
    description="Open and convert bpi picture files."
    print(f'Usage:\t{command} (-h | --help)')
    print(f'\t{command} (filename)\n')
    print(f'\t{command} -c <infile> <outfile>\n')
    print(description + '\n')
    print('Options:')
    print('\t(filename)           view bpi file')
    print('\t-c <infile> <outfile>  convert a png or jpg to bpi')
    print('\t-h, --help           show this screen')
    print()
    print('GitHub repository: <https://github.com/giancarlopernudisegura/binary-image>')


def convert():
    split_int = lambda a: (a // (2**8), a % (2**8))
    img = Image.open(sys.argv[2]).convert('YCbCr')
    print(img.size, img.format)
    pixels = []
    # read pixel data and add it to 2d array
    for x in range(img.size[0]):
        row = []
        for y in range(img.size[1]):
            coordinate = (x, y)
            row.append(img.getpixel(coordinate))
        pixels.append(row)
    print('> done reading input file')
    # save as custom file format
    with open(sys.argv[3], 'wb') as output:
        for w in split_int(img.size[0]):
            output.write(int_to_byte(w))
        for h in split_int(img.size[1]):
            output.write(int_to_byte(h))
        for channel in range(3):
            for row in pixels:
                for pixel in row:
                    output.write(int_to_byte(pixel[channel]))
    print('> done writing new file')


def read(image_file, width, height):
    pixels = []
    for c in range(3):
        channel = []
        for x in range(width):
            row = []
            for y in range(height):
                row.append(byte_to_int(image_file.read(1)))
            channel.append(row)
        pixels.append(channel)
    return pixels


def view():
    with open(sys.argv[1], 'rb') as f:
        w = byte_to_int(f.read(1)) * (2**8)
        w += byte_to_int(f.read(1))
        h = byte_to_int(f.read(1)) * (2**8)
        h += byte_to_int(f.read(1))
        print("width:", w)
        print("height:", h)
        img = Image.new('YCbCr', (w, h))
        raw_image = read(f, w, h)
        print(raw_image)
        for x in range(w):
            for y in range(h):
                pixel = (raw_image[0][x][y], raw_image[1][x][y], raw_image[2][x][y])
                print(pixel)
                # change pixel here
                img.putpixel((x, y), pixel)
        img.convert('RGB')
        img.show()


if __name__ == "__main__":
    if (len(sys.argv) == 1):
        pass
    elif (sys.argv[1] in ('-h', '--help')):
        help_prompt()
    elif (sys.argv[1] == '-c'):
        if len(sys.argv) == 4:
            convert()
        else:
            help_prompt()
            sys.exit(1)
    #elif (sys.argv[1][-4:] == '.bpi'):
    else:
        view()
